
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$angular-multi-layout-scaffolding-primary: mat-palette($mat-indigo);
$angular-multi-layout-scaffolding-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$angular-multi-layout-scaffolding-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$angular-multi-layout-scaffolding-theme: mat-light-theme((
  color: (
    primary: $angular-multi-layout-scaffolding-primary,
    accent: $angular-multi-layout-scaffolding-accent,
    warn: $angular-multi-layout-scaffolding-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($angular-multi-layout-scaffolding-theme);


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$angular-multi-layout-scaffolding-primary: mat-palette($mat-indigo);
$angular-multi-layout-scaffolding-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$angular-multi-layout-scaffolding-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$angular-multi-layout-scaffolding-theme: mat-light-theme((
  color: (
    primary: $angular-multi-layout-scaffolding-primary,
    accent: $angular-multi-layout-scaffolding-accent,
    warn: $angular-multi-layout-scaffolding-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($angular-multi-layout-scaffolding-theme);

/* You can add global styles to this file, and also import other style files */
html {
  height: 100%;
}
body {
  height: 100%;
}

/* Importing Bootstrap SCSS file. */
// @import '~bootstrap/scss/bootstrap';

html, body { height: 100%; }

body {
  margin: 0;
  overflow-x: hidden;
  color: #67757c  !important;
  background: #f4f6f9;

  font-family: Montserrat,sans-serif !important;
  font-size: .875rem !important;
  font-weight: 400 !important;
  line-height: 1.5 !important;
  text-align: left !important;
  background-color: #f4f6f9 !important;
}

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
  margin-bottom: .5rem;
  font-weight: 400;
  line-height: 1.2;
  color: inherit;
}

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: .5rem;
}